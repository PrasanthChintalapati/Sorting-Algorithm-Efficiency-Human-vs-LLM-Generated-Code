Please based on the task description write Solution to pass the provided test cases.
You must follow the following rules:
First, the code should be in ```python
[Code]
``` block.
Second, You should not add the provided test cases into your ```python[Code]``` block.
Third, You are not need to write the test cases, we will provide the test cases for you.
Finally, You should make sure that the provided test cases can pass your solution.

# Task description
```python

Given an array of **distinct** integers `arr`, find all pairs of elements with the minimum absolute difference of any two elements.


Return a list of pairs in ascending order(with respect to pairs), each pair `[a, b]` follows


* `a, b` are from `arr`
* `a < b`
* `b - a` equals to the minimum absolute difference of any two elements in `arr`


 


**Example 1:**



```

**Input:** arr = [4,2,1,3]
**Output:** [[1,2],[2,3],[3,4]]
**Explanation:** The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.
```

**Example 2:**



```

**Input:** arr = [1,3,6,10,15]
**Output:** [[1,3]]

```

**Example 3:**



```

**Input:** arr = [3,8,-10,23,19,-4,-14,27]
**Output:** [[-14,-10],[19,23],[23,27]]

```

 


**Constraints:**


* `2 <= arr.length <= 105`
* `-106 <= arr[i] <= 106`



#Test case
solution = Solution()
assert solution.minimumAbsDifference([-816343, -713210, -577573, -340136, -88243, 93462, 519383, 610710, 843919, 981378]) == [[519383, 610710]]
assert solution.minimumAbsDifference([-235780, -51761, 263424, 496412, 939303]) == [[-235780, -51761]]
assert solution.minimumAbsDifference([-569583, -462724]) == [[-569583, -462724]]
assert solution.minimumAbsDifference([-804596, -474089, -330266, -64366, 339122, 503663, 669365]) == [[-474089, -330266]]
assert solution.minimumAbsDifference([-976818, -552839, -402524, 148999, 342636, 713749, 866958]) == [[-552839, -402524]]
assert solution.minimumAbsDifference([-646886, -619033, -572505, -169746, -160499, 632658, 711172, 977625]) == [[-169746, -160499]]
assert solution.minimumAbsDifference([-625677, -594541, -518472, -255108, 583347, 942300, 961137]) == [[942300, 961137]]
assert solution.minimumAbsDifference([-906736, 847196]) == [[-906736, 847196]]
assert solution.minimumAbsDifference([-503908, 162231, 448592, 994551]) == [[162231, 448592]]
assert solution.minimumAbsDifference([-947134, -223038, -112357, -101120, 134297, 287086, 597799, 898915]) == [[-112357, -101120]]
```

# Code
```python
import time
import tracemalloc

tracemalloc.start()
start_time = time.perf_counter()

class Solution:
    def minimumAbsDifference(self, arr: List[int]) -> List[List[int]]:
        arr.sort()
        mi = min(b - a for a, b in pairwise(arr))
        return [[a, b] for a, b in pairwise(arr) if b - a == mi]

end_time = time.perf_counter()
current, peak = tracemalloc.get_traced_memory()
execution_time_s = end_time - start_time
peak_memory_mb = peak / (1024 * 1024)
print(f"Execution Time: {execution_time_s:.6f} seconds")
print(f"Peak Memory Usage: {peak_memory_mb:.6f} MB")
tracemalloc.stop()
```
